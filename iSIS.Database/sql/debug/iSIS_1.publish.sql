/*
Deployment script for iSISDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "iSISDatabase"
:setvar DefaultFilePrefix "iSISDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE Thai_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Creating [dbo].[A]...';


GO
CREATE TABLE [dbo].[A] (
    [ID]              INT            IDENTITY (1, 1) NOT NULL,
    [Code]            NVARCHAR (30)  NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [ClassLevelID]    BIGINT         NULL,
    [SchoolID]        INT            NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Absence]...';


GO
CREATE TABLE [dbo].[Absence] (
    [ID]             INT            IDENTITY (1, 1) NOT NULL,
    [AbsenceHours]   NVARCHAR (30)  NULL,
    [CategoryID]     INT            NULL,
    [Date]           DATETIME2 (7)  NULL,
    [Reference]      NVARCHAR (200) NULL,
    [Remark]         NVARCHAR (400) NULL,
    [StudentID]      INT            NULL,
    [ClassSectionID] INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Admission]...';


GO
CREATE TABLE [dbo].[Admission] (
    [ID]                    INT           IDENTITY (1, 1) NOT NULL,
    [AdmissionID]           INT           NULL,
    [SeqNo]                 INT           NULL,
    [ApplyFrom]             DATETIME2 (7) NULL,
    [ApplyTo]               DATETIME2 (7) NULL,
    [OrientationDate]       DATETIME2 (7) NULL,
    [RegistrationDate]      DATETIME2 (7) NULL,
    [TestResultPublishDate] DATETIME2 (7) NULL,
    [SemesterID]            INT           NULL,
    [SchoolID]              INT           NULL,
    [DescriptionMLSID]      BIGINT        NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[AdmissionTest]...';


GO
CREATE TABLE [dbo].[AdmissionTest] (
    [ID]               INT           IDENTITY (1, 1) NOT NULL,
    [AdmissionID]      INT           NULL,
    [SeqNo]            INT           NULL,
    [TestFrom]         DATETIME2 (7) NULL,
    [TestTo]           DATETIME2 (7) NULL,
    [DescriptionMLSID] BIGINT        NULL,
    [TitleMLSID]       BIGINT        NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[AdmitCurriculum]...';


GO
CREATE TABLE [dbo].[AdmitCurriculum] (
    [ID]               INT    IDENTITY (1, 1) NOT NULL,
    [AdmissionID]      INT    NULL,
    [Capacity]         INT    NULL,
    [CurriculumID]     INT    NULL,
    [DescriptionMLSID] BIGINT NULL,
    [TitleMLSID]       BIGINT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[AlternateSchool]...';


GO
CREATE TABLE [dbo].[AlternateSchool] (
    [ID]                   INT            IDENTITY (1, 1) NOT NULL,
    [Rank]                 INT            NULL,
    [Reference]            NVARCHAR (200) NULL,
    [Remark]               NVARCHAR (400) NULL,
    [StudentApplicationID] INT            NULL,
    [SchoolID]             INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Application]...';


GO
CREATE TABLE [dbo].[Application] (
    [ID]              INT            NOT NULL,
    [Code]            NVARCHAR (30)  NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [TitleMLSID]      BIGINT         NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ClassLevel]...';


GO
CREATE TABLE [dbo].[ClassLevel] (
    [ID]              INT            IDENTITY (1, 1) NOT NULL,
    [CategoryID]      INT            NULL,
    [Code]            NVARCHAR (30)  NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [LevelNo]         INT            NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ClassLevelSection]...';


GO
CREATE TABLE [dbo].[ClassLevelSection] (
    [ID]              INT            IDENTITY (1, 1) NOT NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [ClassLevelID]    INT            NULL,
    [SchoolID]        INT            NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Classroom]...';


GO
CREATE TABLE [dbo].[Classroom] (
    [ID]                  INT    IDENTITY (1, 1) NOT NULL,
    [ClassLevelSectionID] INT    NULL,
    [SchoolID]            INT    NULL,
    [RoomID]              BIGINT NULL,
    [SemesterID]          BIGINT NULL,
    [SemesterNo]          INT    NULL,
    [AcademicYear]        INT    NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ClassroomStudent]...';


GO
CREATE TABLE [dbo].[ClassroomStudent] (
    [ID]              BIGINT         IDENTITY (1, 1) NOT NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [ClassLevelID]    INT            NULL,
    [ClassroomID]     INT            NULL,
    [GPA]             FLOAT (53)     NULL,
    [SchoolID]        INT            NULL,
    [StudentID]       INT            NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ClassroomTeacher]...';


GO
CREATE TABLE [dbo].[ClassroomTeacher] (
    [ID]              BIGINT         IDENTITY (1, 1) NOT NULL,
    [CategoryID]      INT            NULL,
    [ClassroomID]     INT            NULL,
    [TeacherID]       INT            NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [ClassLevelID]    BIGINT         NULL,
    [SchoolID]        INT            NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ClassSection]...';


GO
CREATE TABLE [dbo].[ClassSection] (
    [ID]                  BIGINT         IDENTITY (1, 1) NOT NULL,
    [ClassLevelSectionID] BIGINT         NULL,
    [CourseID]            BIGINT         NULL,
    [RoomID]              BIGINT         NULL,
    [SchoolID]            INT            NULL,
    [SemesterID]          BIGINT         NULL,
    [EffectiveFrom]       DATETIME2 (7)  NULL,
    [EffectiveTo]         DATETIME2 (7)  NULL,
    [Remark]              NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ClassSectionStudent]...';


GO
CREATE TABLE [dbo].[ClassSectionStudent] (
    [ID]             BIGINT         IDENTITY (1, 1) NOT NULL,
    [ClassSectionID] BIGINT         NULL,
    [StudentID]      BIGINT         NULL,
    [GradeID]        INT            NULL,
    [GradePoint]     REAL           NULL,
    [AttendedHours]  REAL           NULL,
    [EffectiveFrom]  DATETIME2 (7)  NULL,
    [EffectiveTo]    DATETIME2 (7)  NULL,
    [Reference]      NVARCHAR (200) NULL,
    [Remark]         NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ClassSectionTeacher]...';


GO
CREATE TABLE [dbo].[ClassSectionTeacher] (
    [ID]             BIGINT         IDENTITY (1, 1) NOT NULL,
    [ClassSectionID] BIGINT         NULL,
    [TeacherID]      BIGINT         NULL,
    [EffectiveFrom]  DATETIME2 (7)  NULL,
    [EffectiveTo]    DATETIME2 (7)  NULL,
    [Reference]      NVARCHAR (200) NULL,
    [Remark]         NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Configuration]...';


GO
CREATE TABLE [dbo].[Configuration] (
    [ID]                               INT           IDENTITY (1, 1) NOT NULL,
    [SystemID]                         INT           NOT NULL,
    [EffectiveFrom]                    DATETIME2 (7) NOT NULL,
    [EffectiveTo]                      DATETIME2 (7) NULL,
    [AcademicLevelRootID]              INT           NULL,
    [BloodGroupRootID]                 INT           NULL,
    [GenderRootID]                     INT           NULL,
    [MajorRootID]                      INT           NULL,
    [OccupationRootID]                 INT           NULL,
    [RaceRootID]                       INT           NULL,
    [ReligionRootID]                   INT           NULL,
    [StudentStatusRootID]              INT           NULL,
    [ParentCategoryID]                 INT           NULL,
    [PersonRelationshipCategoryRootID] INT           NULL,
    [RelativeCategoryID]               INT           NULL,
    [DefaultDateCultureName]           NVARCHAR (30) NULL,
    [DefaultDateFormat]                NVARCHAR (30) NULL,
    [DefaultLanguageCode]              NVARCHAR (30) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Country]...';


GO
CREATE TABLE [dbo].[Country] (
    [ID]              BIGINT         IDENTITY (1, 1) NOT NULL,
    [Code]            NVARCHAR (30)  NULL,
    [CurrencyCode]    NCHAR (3)      NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [ClassLevelID]    BIGINT         NULL,
    [SchoolID]        INT            NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Course]...';


GO
CREATE TABLE [dbo].[Course] (
    [ID]                INT            IDENTITY (1, 1) NOT NULL,
    [Code]              NVARCHAR (30)  NULL,
    [CourseNoMLSID]     BIGINT         NULL,
    [DescriptionMLSID]  BIGINT         NULL,
    [ShortTitleMLSID]   BIGINT         NULL,
    [TitleMLSID]        BIGINT         NULL,
    [CreditHours]       REAL           NULL,
    [ClassLevelID]      BIGINT         NULL,
    [OutcomeCategoryID] BIGINT         NULL,
    [SchoolID]          BIGINT         NULL,
    [EffectiveFrom]     DATETIME2 (7)  NULL,
    [EffectiveTo]       DATETIME2 (7)  NULL,
    [Reference]         NVARCHAR (200) NULL,
    [Remark]            NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Curriculum]...';


GO
CREATE TABLE [dbo].[Curriculum] (
    [ID]              INT            IDENTITY (1, 1) NOT NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[CurriculumCourse]...';


GO
CREATE TABLE [dbo].[CurriculumCourse] (
    [ID]            INT            IDENTITY (1, 1) NOT NULL,
    [EffectiveFrom] DATETIME2 (7)  NULL,
    [EffectiveTo]   DATETIME2 (7)  NULL,
    [CategoryID]    INT            NULL,
    [CurriculumID]  INT            NULL,
    [CourseID]      INT            NULL,
    [Reference]     NVARCHAR (200) NULL,
    [Remark]        NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[CurriculumFramework]...';


GO
CREATE TABLE [dbo].[CurriculumFramework] (
    [ID]              INT           IDENTITY (1, 1) NOT NULL,
    [EffectiveFrom]   DATETIME2 (7) NULL,
    [EffectiveTo]     DATETIME2 (7) NULL,
    [ShortTitleMLSID] BIGINT        NULL,
    [TitleMLSID]      BIGINT        NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DesiredOutcome]...';


GO
CREATE TABLE [dbo].[DesiredOutcome] (
    [ID]                    BIGINT         IDENTITY (1, 1) NOT NULL,
    [Discriminator]         TINYINT        NULL,
    [Code]                  NVARCHAR (30)  NULL,
    [CurriculumFrameworkID] INT            NULL,
    [ParentID]              BIGINT         NULL,
    [EffectiveFrom]         DATETIME2 (7)  NULL,
    [EffectiveTo]           DATETIME2 (7)  NULL,
    [Reference]             NVARCHAR (200) NULL,
    [Remark]                NVARCHAR (400) NULL,
    [ClassLevelID]          BIGINT         NULL,
    [ShortTitleMLSID]       BIGINT         NULL,
    [TitleMLSID]            BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[DiscreteGrade]...';


GO
CREATE TABLE [dbo].[DiscreteGrade] (
    [ID]              INT            IDENTITY (1, 1) NOT NULL,
    [Symbol]          NVARCHAR (8)   NULL,
    [Point]           REAL           NULL,
    [Description]     NVARCHAR (400) NULL,
    [GradingSystemID] BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Education]...';


GO
CREATE TABLE [dbo].[Education] (
    [ID]              INT            IDENTITY (1, 1) NOT NULL,
    [PersonID]        INT            NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [ClassLevelID]    BIGINT         NULL,
    [SchoolID]        INT            NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Experience]...';


GO
CREATE TABLE [dbo].[Experience] (
    [ID]                 INT            IDENTITY (1, 1) NOT NULL,
    [PersonID]           INT            NULL,
    [EffectiveFrom]      DATETIME2 (7)  NULL,
    [EffectiveTo]        DATETIME2 (7)  NULL,
    [Reference]          NVARCHAR (200) NULL,
    [Remark]             NVARCHAR (400) NULL,
    [OrganzationName]    NVARCHAR (200) NULL,
    [OrganzationAddress] NVARCHAR (200) NULL,
    [JobDescription]     NVARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[GeographicAddress]...';


GO
CREATE TABLE [dbo].[GeographicAddress] (
    [ID]             BIGINT        IDENTITY (1, 1) NOT NULL,
    [AddressNoMLSID] BIGINT        NULL,
    [Street1MLSID]   BIGINT        NULL,
    [Street2MLSID]   BIGINT        NULL,
    [PostalCode]     NVARCHAR (20) NULL,
    [ProvinceID]     BIGINT        NULL,
    [DistrictID]     BIGINT        NULL,
    [SubdistrictID]  BIGINT        NULL,
    [TownID]         BIGINT        NULL,
    [CountryID]      BIGINT        NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[GeographicRegion]...';


GO
CREATE TABLE [dbo].[GeographicRegion] (
    [ID]            INT           IDENTITY (1, 1) NOT NULL,
    [Code]          NVARCHAR (10) NULL,
    [TitleMLSID]    BIGINT        NULL,
    [CountryID]     INT           NULL,
    [ParentID]      INT           NULL,
    [EffectiveFrom] DATETIME2 (7) NULL,
    [EffectiveTo]   DATETIME2 (7) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[GeographicRegion].[GeographicRegion_IX_CountryID]...';


GO
CREATE NONCLUSTERED INDEX [GeographicRegion_IX_CountryID]
    ON [dbo].[GeographicRegion]([CountryID] ASC, [ParentID] ASC);


GO
PRINT N'Creating [dbo].[GradingSystem]...';


GO
CREATE TABLE [dbo].[GradingSystem] (
    [ID]              BIGINT         IDENTITY (1, 1) NOT NULL,
    [Discriminator]   TINYINT        NULL,
    [Code]            NVARCHAR (30)  NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (200) NULL,
    [Remark]          NVARCHAR (400) NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [TitleMLSID]      BIGINT         NULL,
    [MaxPoint]        REAL           NULL,
    [MinPoint]        REAL           NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[HierarchicalCategory]...';


GO
CREATE TABLE [dbo].[HierarchicalCategory] (
    [ID]               INT            IDENTITY (1, 1) NOT NULL,
    [Code]             NVARCHAR (30)  NULL,
    [EffectiveFrom]    DATETIME2 (7)  NULL,
    [EffectiveTo]      DATETIME2 (7)  NULL,
    [Reference]        NVARCHAR (200) NULL,
    [Remark]           NVARCHAR (400) NULL,
    [RootID]           INT            NULL,
    [ParentID]         INT            NULL,
    [DescriptionMLSID] BIGINT         NULL,
    [ShortTitleMLSID]  BIGINT         NULL,
    [TitleMLSID]       BIGINT         NULL,
    [LevelNo]          INT            NULL,
    [SeqNo]            INT            NULL,
    [Weight]           FLOAT (53)     NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Language]...';


GO
CREATE TABLE [dbo].[Language] (
    [LanguageCode]    NCHAR (3)       NOT NULL,
    [SeqNo]           INT             NULL,
    [ShortTitle]      NVARCHAR (20)   NULL,
    [SmallImageBytes] VARBINARY (MAX) NULL,
    [Title]           NVARCHAR (40)   NULL,
    PRIMARY KEY CLUSTERED ([LanguageCode] ASC)
);


GO
PRINT N'Creating [dbo].[MLSValues]...';


GO
CREATE TABLE [dbo].[MLSValues] (
    [ID]           BIGINT          IDENTITY (1, 1) NOT NULL,
    [MLSID]        BIGINT          NULL,
    [LanguageCode] NVARCHAR (4)    NULL,
    [LanguageID]   INT             NULL,
    [Value]        NVARCHAR (4000) NULL,
    [UpdatedTS]    DATETIME2 (7)   NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[MultilingualString]...';


GO
CREATE TABLE [dbo].[MultilingualString] (
    [ID]     BIGINT         IDENTITY (1, 1) NOT NULL,
    [Code]   NVARCHAR (20)  NULL,
    [Remark] NVARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Organization]...';


GO
CREATE TABLE [dbo].[Organization] (
    [ID]                        INT            IDENTITY (1, 1) NOT NULL,
    [CurrentNameID]             INT            NULL,
    [Discriminator]             TINYINT        NULL,
    [EffectiveFrom]             DATETIME2 (7)  NULL,
    [EffectiveTo]               DATETIME2 (7)  NULL,
    [Reference]                 NVARCHAR (200) NULL,
    [Remark]                    NVARCHAR (400) NULL,
    [OfficialIDNo]              NVARCHAR (50)  NULL,
    [EmailAddress]              NVARCHAR (50)  NULL,
    [URL]                       NVARCHAR (500) NULL,
    [CategoryID]                INT            NULL,
    [SupervisoryOrganizationID] BIGINT         NULL,
    [MaxClassLevelID]           INT            NULL,
    [MinClassLevelID]           INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[OrgName]...';


GO
CREATE TABLE [dbo].[OrgName] (
    [ID]              INT            IDENTITY (1, 1) NOT NULL,
    [OrganizationID]  INT            NULL,
    [TitleMLSID]      BIGINT         NULL,
    [ShortTitleMLSID] BIGINT         NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (50)  NULL,
    [Remark]          NVARCHAR (500) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[PartyAddress]...';


GO
CREATE TABLE [dbo].[PartyAddress] (
    [ID]                  INT            IDENTITY (1, 1) NOT NULL,
    [PartyID]             INT            NOT NULL,
    [PartyDiscriminator]  TINYINT        NULL,
    [CategoryID]          BIGINT         NULL,
    [EffectiveFrom]       DATETIME       NULL,
    [EffectiveTo]         DATETIME       NULL,
    [Reference]           NVARCHAR (200) NULL,
    [Remark]              NVARCHAR (400) NULL,
    [GeographicAddressID] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[PartyIdentity]...';


GO
CREATE TABLE [dbo].[PartyIdentity] (
    [ID]                 INT            IDENTITY (1, 1) NOT NULL,
    [PartyID]            INT            NOT NULL,
    [PartyDiscriminator] TINYINT        NULL,
    [CategoryID]         INT            NULL,
    [EffectiveFrom]      DATETIME       NULL,
    [EffectiveTo]        DATETIME       NULL,
    [Reference]          NVARCHAR (200) NULL,
    [Remark]             NVARCHAR (400) NULL,
    [IDNo]               NVARCHAR (30)  NOT NULL,
    [IssuedBy]           INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Password]...';


GO
CREATE TABLE [dbo].[Password] (
    [ID]                BIGINT         NOT NULL,
    [UserID]            INT            NULL,
    [EncryptedPassword] NVARCHAR (512) NULL,
    [EffectiveFrom]     DATETIME2 (7)  NULL,
    [EffectiveTo]       DATETIME2 (7)  NULL,
    [Reference]         NVARCHAR (50)  NULL,
    [Remark]            NVARCHAR (500) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Password].[Password_IX_User]...';


GO
CREATE NONCLUSTERED INDEX [Password_IX_User]
    ON [dbo].[Password]([UserID] ASC);


GO
PRINT N'Creating [dbo].[PerformanceIndicator]...';


GO
CREATE TABLE [dbo].[PerformanceIndicator] (
    [ID]                  BIGINT        IDENTITY (1, 1) NOT NULL,
    [DescriptionMLSID]    BIGINT        NULL,
    [ClassLevelOutcomeID] BIGINT        NULL,
    [ClassLevelID]        BIGINT        NULL,
    [EffectiveFrom]       DATETIME2 (7) NULL,
    [EffectiveTo]         DATETIME2 (7) NULL,
    [SequenceNo]          INT           NULL,
    [Weight]              REAL          NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[PerformanceMeasurement]...';


GO
CREATE TABLE [dbo].[PerformanceMeasurement] (
    [ID]                     BIGINT        IDENTITY (1, 1) NOT NULL,
    [DescriptionMLSID]       BIGINT        NULL,
    [ClassLevelOutcomeID]    BIGINT        NULL,
    [ClassLevelID]           BIGINT        NULL,
    [EffectiveFrom]          DATETIME2 (7) NULL,
    [EffectiveTo]            DATETIME2 (7) NULL,
    [ClassSectionID]         INT           NULL,
    [SemesterID]             INT           NULL,
    [StudentID]              INT           NULL,
    [PerformanceIndicatorID] INT           NULL,
    [SequenceNo]             INT           NULL,
    [Point]                  REAL          NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE TABLE [dbo].[Person] (
    [ID]            INT           NOT NULL,
    [CurrentNameID] INT           NULL,
    [OfficialIDNo]  NVARCHAR (20) NULL,
    [EffectiveFrom] DATETIME2 (7) NULL,
    [EffectiveTo]   DATETIME2 (7) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[PersonName]...';


GO
CREATE TABLE [dbo].[PersonName] (
    [ID]              INT            NOT NULL,
    [PersonID]        INT            NULL,
    [PrefixMLSID]     INT            NULL,
    [FirstNameMLSID]  BIGINT         NULL,
    [MiddleNameMLSID] BIGINT         NULL,
    [LastNameMLSID]   BIGINT         NULL,
    [EffectiveFrom]   DATETIME2 (7)  NULL,
    [EffectiveTo]     DATETIME2 (7)  NULL,
    [Reference]       NVARCHAR (50)  NULL,
    [Remark]          NVARCHAR (500) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Photo]...';


GO
CREATE TABLE [dbo].[Photo] (
    [ID]        INT            IDENTITY (1, 1) NOT NULL,
    [PersonID]  INT            NULL,
    [Date]      DATETIME2 (7)  NULL,
    [Reference] NVARCHAR (200) NULL,
    [Remark]    NVARCHAR (400) NULL,
    [Image]     NTEXT          NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Role]...';


GO
CREATE TABLE [dbo].[Role] (
    [ID]               INT            IDENTITY (1, 1) NOT NULL,
    [Code]             NVARCHAR (30)  NULL,
    [ApplicationID]    INT            NULL,
    [DescriptionMLSID] BIGINT         NULL,
    [ShortTitleMLSID]  BIGINT         NULL,
    [TitleMLSID]       BIGINT         NULL,
    [EffectiveFrom]    DATETIME2 (7)  NULL,
    [EffectiveTo]      DATETIME2 (7)  NULL,
    [Reference]        NVARCHAR (200) NULL,
    [Remark]           NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Room]...';


GO
CREATE TABLE [dbo].[Room] (
    [ID]            INT            IDENTITY (1, 1) NOT NULL,
    [Code]          NVARCHAR (30)  NULL,
    [EffectiveFrom] DATETIME2 (7)  NULL,
    [EffectiveTo]   DATETIME2 (7)  NULL,
    [Reference]     NVARCHAR (200) NULL,
    [Remark]        NVARCHAR (400) NULL,
    [SchoolID]      INT            NULL,
    [BuildingTitle] NVARCHAR (200) NULL,
    [RoomNo]        NVARCHAR (20)  NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[SchoolOutcomeCategoryGrading]...';


GO
CREATE TABLE [dbo].[SchoolOutcomeCategoryGrading] (
    [ID]                INT            IDENTITY (1, 1) NOT NULL,
    [Code]              NVARCHAR (30)  NULL,
    [EffectiveFrom]     DATETIME2 (7)  NULL,
    [EffectiveTo]       DATETIME2 (7)  NULL,
    [Reference]         NVARCHAR (200) NULL,
    [Remark]            NVARCHAR (400) NULL,
    [GradingSystemID]   INT            NULL,
    [OutcomeCategoryID] INT            NULL,
    [SchoolID]          INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Semester]...';


GO
CREATE TABLE [dbo].[Semester] (
    [ID]              BIGINT        IDENTITY (1, 1) NOT NULL,
    [EffectiveFrom]   DATETIME2 (7) NULL,
    [EffectiveTo]     DATETIME2 (7) NULL,
    [AcademicYear]    INT           NULL,
    [SemesterNo]      INT           NULL,
    [SchoolID]        INT           NULL,
    [SemesterID]      BIGINT        NULL,
    [ApplicationFrom] DATETIME2 (7) NULL,
    [ApplicationTo]   DATETIME2 (7) NULL,
    [TeachingFrom]    DATETIME2 (7) NULL,
    [TeachingTo]      DATETIME2 (7) NULL,
    [FinalExamFrom]   DATETIME2 (7) NULL,
    [FinalExamTo]     DATETIME2 (7) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Student]...';


GO
CREATE TABLE [dbo].[Student] (
    [ID]                   BIGINT         NOT NULL,
    [IDNo]                 NVARCHAR (20)  NULL,
    [CategoryID]           INT            NULL,
    [PersonID]             INT            NULL,
    [SchoolID]             INT            NULL,
    [EffectiveFrom]        DATETIME2 (7)  NULL,
    [EffectiveTo]          DATETIME2 (7)  NULL,
    [Reference]            NVARCHAR (50)  NULL,
    [Remark]               NVARCHAR (500) NULL,
    [CurriculumID]         INT            NULL,
    [MajorID]              INT            NULL,
    [AdmittedClassLevelID] INT            NULL,
    [AdmittedAcademicYear] INT            NULL,
    [AdmittedSemesterID]   INT            NULL,
    [AdmittedSemesterNo]   INT            NULL,
    [AdmittedGPA]          REAL           NULL,
    [CurrentGPA]           REAL           NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Teacher]...';


GO
CREATE TABLE [dbo].[Teacher] (
    [ID]                INT            NOT NULL,
    [IDNo]              NVARCHAR (20)  NULL,
    [CategoryID]        INT            NULL,
    [PersonID]          INT            NULL,
    [SchoolID]          INT            NULL,
    [EffectiveFrom]     DATETIME2 (7)  NULL,
    [EffectiveTo]       DATETIME2 (7)  NULL,
    [Reference]         NVARCHAR (50)  NULL,
    [Remark]            NVARCHAR (500) NULL,
    [StartAcademicYear] INT            NULL,
    [StartSemesterID]   INT            NULL,
    [StartSemesterNo]   INT            NULL,
    [StatusID]          INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [ID]                          BIGINT         NOT NULL,
    [SystemID]                    INT            NULL,
    [PersonID]                    BIGINT         NULL,
    [SchoolID]                    INT            NULL,
    [IsDisable]                   BIT            NULL,
    [LastSuccessfulLoginTS]       DATETIME2 (7)  NULL,
    [LastFailedLoginTS]           DATETIME2 (7)  NULL,
    [ConsecutiveFailedLoginCount] INT            NULL,
    [CurrentPasswordID]           BIGINT         NULL,
    [BirthDate]                   DATETIME2 (7)  NULL,
    [DeceasedDate]                DATETIME2 (7)  NULL,
    [Reference]                   NVARCHAR (50)  NULL,
    [Remark]                      NVARCHAR (500) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[UserRole]...';


GO
CREATE TABLE [dbo].[UserRole] (
    [ID]            INT            IDENTITY (1, 1) NOT NULL,
    [EffectiveFrom] DATETIME2 (7)  NULL,
    [EffectiveTo]   DATETIME2 (7)  NULL,
    [Reference]     NVARCHAR (200) NULL,
    [Remark]        NVARCHAR (400) NULL,
    [UserID]        INT            NULL,
    [RoleID]        INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '58052ab5-7c11-407e-bb3e-7de711e41fad')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('58052ab5-7c11-407e-bb3e-7de711e41fad')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '67c7f9bb-b5d4-4b2f-bee9-8d5a5cc432ec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('67c7f9bb-b5d4-4b2f-bee9-8d5a5cc432ec')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3d3db7e3-e097-4d1e-941d-b3f0fcb88a2e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3d3db7e3-e097-4d1e-941d-b3f0fcb88a2e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a594cac8-1fa1-4674-9457-0576692dc713')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a594cac8-1fa1-4674-9457-0576692dc713')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd10be975-513c-4329-a603-a0f99b8bc63f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d10be975-513c-4329-a603-a0f99b8bc63f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'de0d6c88-09cb-405a-b72b-a166dfb77ee9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('de0d6c88-09cb-405a-b72b-a166dfb77ee9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '91512ec2-4636-4670-8645-8c617302b1c5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('91512ec2-4636-4670-8645-8c617302b1c5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '43b44248-25da-4941-adc3-1262624a7838')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('43b44248-25da-4941-adc3-1262624a7838')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c59e8f40-4c68-492e-b6fa-179346efee17')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c59e8f40-4c68-492e-b6fa-179346efee17')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '19487e5b-1320-438d-bfea-e082abf063b7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('19487e5b-1320-438d-bfea-e082abf063b7')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
