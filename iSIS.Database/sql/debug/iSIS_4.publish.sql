/*
Deployment script for iSIS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "iSIS"
:setvar DefaultFilePrefix "iSIS"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
/*
The column [dbo].[User].[LastFailedLoginTS] is being dropped, data loss could occur.

The column [dbo].[User].[SchoolID] is being dropped, data loss could occur.

The column [dbo].[User].[SystemID] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[User])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Starting rebuilding table [dbo].[User]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_User] (
    [ID]                          BIGINT         NOT NULL,
    [ApplicationID]               INT            NULL,
    [LoginName]                   NVARCHAR (50)  NULL,
    [PersonID]                    BIGINT         NULL,
    [OrganizationID]              INT            NULL,
    [IsDisable]                   BIT            NULL,
    [LastSuccessfulLoginTS]       DATETIME2 (7)  NULL,
    [LastFailedLoginTimestamp]    DATETIME2 (7)  NULL,
    [ConsecutiveFailedLoginCount] INT            NULL,
    [CurrentPasswordID]           BIGINT         NULL,
    [BirthDate]                   DATETIME2 (7)  NULL,
    [DeceasedDate]                DATETIME2 (7)  NULL,
    [EffectiveFrom]               DATETIME2 (7)  NULL,
    [EffectiveTo]                 DATETIME2 (7)  NULL,
    [Reference]                   NVARCHAR (50)  NULL,
    [Remark]                      NVARCHAR (500) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[User])
    BEGIN
        
        INSERT INTO [dbo].[tmp_ms_xx_User] ([ID], [PersonID], [IsDisable], [LastSuccessfulLoginTS], [ConsecutiveFailedLoginCount], [CurrentPasswordID], [BirthDate], [DeceasedDate], [Reference], [Remark])
        SELECT   [ID],
                 [PersonID],
                 [IsDisable],
                 [LastSuccessfulLoginTS],
                 [ConsecutiveFailedLoginCount],
                 [CurrentPasswordID],
                 [BirthDate],
                 [DeceasedDate],
                 [Reference],
                 [Remark]
        FROM     [dbo].[User]
        ORDER BY [ID] ASC;
        
    END

DROP TABLE [dbo].[User];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_User]', N'User';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
