/*
Deployment script for iSIS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "iSIS"
:setvar DefaultFilePrefix "iSIS"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
/*
The column [dbo].[Experience].[OrganzationAddress] is being dropped, data loss could occur.

The column [dbo].[Experience].[OrganzationID] is being dropped, data loss could occur.

The column [dbo].[Experience].[OrganzationName] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Experience])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Starting rebuilding table [dbo].[Experience]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Experience] (
    [ID]                  INT            IDENTITY (1, 1) NOT NULL,
    [PersonID]            INT            NULL,
    [EffectiveFrom]       DATETIME2 (7)  NULL,
    [EffectiveTo]         DATETIME2 (7)  NULL,
    [Reference]           NVARCHAR (200) NULL,
    [Remark]              NVARCHAR (400) NULL,
    [OrganizationID]      INT            NULL,
    [OrganizationName]    NVARCHAR (200) NULL,
    [OrganizationAddress] NVARCHAR (200) NULL,
    [JobDescription]      NVARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Experience])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Experience] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Experience] ([ID], [PersonID], [EffectiveFrom], [EffectiveTo], [Reference], [Remark], [JobDescription])
        SELECT   [ID],
                 [PersonID],
                 [EffectiveFrom],
                 [EffectiveTo],
                 [Reference],
                 [Remark],
                 [JobDescription]
        FROM     [dbo].[Experience]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Experience] OFF;
    END

DROP TABLE [dbo].[Experience];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Experience]', N'Experience';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[StudentApplication]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_StudentApplication] (
    [ID]                  INT            IDENTITY (1, 1) NOT NULL,
    [Date]                DATETIME2 (7)  NULL,
    [Reference]           NVARCHAR (200) NULL,
    [Remark]              NVARCHAR (400) NULL,
    [IDNo]                NVARCHAR (20)  NULL,
    [AppliedCurriculumID] INT            NULL,
    [AppliedDate]         DATETIME2 (7)  NULL,
    [ApplicantID]         INT            NULL,
    [FatherID]            INT            NULL,
    [GuardianID]          INT            NULL,
    [MotherID]            INT            NULL,
    [StudentID]           INT            NULL,
    [LastSchoolID]        INT            NULL,
    [LastClassLevelID]    INT            NULL,
    [GPA]                 REAL           NULL,
    [ONETScore]           REAL           NULL,
    [TotalTestScore]      REAL           NULL,
    [Rank]                INT            NULL,
    [IsAdmitted]          BIT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[StudentApplication])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StudentApplication] ON;
        INSERT INTO [dbo].[tmp_ms_xx_StudentApplication] ([ID], [Date], [Reference], [Remark], [IDNo], [ApplicantID], [FatherID], [GuardianID], [MotherID], [StudentID], [LastSchoolID], [LastClassLevelID], [GPA], [ONETScore], [TotalTestScore], [Rank], [IsAdmitted])
        SELECT   [ID],
                 [Date],
                 [Reference],
                 [Remark],
                 [IDNo],
                 [ApplicantID],
                 [FatherID],
                 [GuardianID],
                 [MotherID],
                 [StudentID],
                 [LastSchoolID],
                 [LastClassLevelID],
                 [GPA],
                 [ONETScore],
                 [TotalTestScore],
                 [Rank],
                 [IsAdmitted]
        FROM     [dbo].[StudentApplication]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StudentApplication] OFF;
    END

DROP TABLE [dbo].[StudentApplication];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_StudentApplication]', N'StudentApplication';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
