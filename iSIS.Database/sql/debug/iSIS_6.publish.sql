/*
Deployment script for iSIS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "iSIS"
:setvar DefaultFilePrefix "iSIS"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
/*
The type for column OutcomeCategoryID in table [dbo].[Course] is currently  BIGINT NULL but is being changed to  INT NULL. Data loss could occur.

The type for column SchoolID in table [dbo].[Course] is currently  BIGINT NULL but is being changed to  INT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Course])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Education].[ClassLevelID] is being dropped, data loss could occur.

The column [dbo].[Education].[SchoolID] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Education])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Altering [dbo].[Configuration]...';


GO
ALTER TABLE [dbo].[Configuration]
    ADD [CurriculumCourseCategoryRootID]         INT NULL,
        [RoyalDecorationRootID]                  INT NULL,
        [GuardianCategoryID]                     INT NULL,
        [FatherCategoryID]                       INT NULL,
        [MotherCategoryID]                       INT NULL,
        [PersonPersonRelationshipCategoryRootID] INT NULL,
        [EducationLevelRootID]                   INT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[Course]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Course] (
    [ID]                INT            IDENTITY (1, 1) NOT NULL,
    [Code]              NVARCHAR (30)  NULL,
    [CourseNoMLSID]     BIGINT         NULL,
    [DescriptionMLSID]  BIGINT         NULL,
    [ShortTitleMLSID]   BIGINT         NULL,
    [TitleMLSID]        BIGINT         NULL,
    [CreditHours]       REAL           NULL,
    [ClassLevelID]      BIGINT         NULL,
    [OutcomeCategoryID] INT            NULL,
    [SchoolID]          INT            NULL,
    [GradingSystemID]   INT            NULL,
    [EffectiveFrom]     DATETIME2 (7)  NULL,
    [EffectiveTo]       DATETIME2 (7)  NULL,
    [Reference]         NVARCHAR (200) NULL,
    [Remark]            NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Course])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Course] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Course] ([ID], [Code], [CourseNoMLSID], [DescriptionMLSID], [ShortTitleMLSID], [TitleMLSID], [CreditHours], [ClassLevelID], [OutcomeCategoryID], [SchoolID], [EffectiveFrom], [EffectiveTo], [Reference], [Remark])
        SELECT   [ID],
                 [Code],
                 [CourseNoMLSID],
                 [DescriptionMLSID],
                 [ShortTitleMLSID],
                 [TitleMLSID],
                 [CreditHours],
                 [ClassLevelID],
                 [OutcomeCategoryID],
                 [SchoolID],
                 [EffectiveFrom],
                 [EffectiveTo],
                 [Reference],
                 [Remark]
        FROM     [dbo].[Course]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Course] OFF;
    END

DROP TABLE [dbo].[Course];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Course]', N'Course';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[Education]...';


GO
ALTER TABLE [dbo].[Education] DROP COLUMN [ClassLevelID], COLUMN [SchoolID];


GO
ALTER TABLE [dbo].[Education]
    ADD [StartDate]                INT NULL,
        [GraduatedDate]            INT NULL,
        [EducationLevelID]         INT NULL,
        [AcademicInstituteName]    INT NULL,
        [AcademicInstituteAddress] INT NULL,
        [DegreeTitle]              INT NULL,
        [ShortDegreeTitle]         INT NULL;


GO
PRINT N'Starting rebuilding table [dbo].[Experience]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Experience] (
    [ID]                 INT            IDENTITY (1, 1) NOT NULL,
    [PersonID]           INT            NULL,
    [EffectiveFrom]      DATETIME2 (7)  NULL,
    [EffectiveTo]        DATETIME2 (7)  NULL,
    [Reference]          NVARCHAR (200) NULL,
    [Remark]             NVARCHAR (400) NULL,
    [OrganzationID]      INT            NULL,
    [OrganzationName]    NVARCHAR (200) NULL,
    [OrganzationAddress] NVARCHAR (200) NULL,
    [JobDescription]     NVARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Experience])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Experience] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Experience] ([ID], [PersonID], [EffectiveFrom], [EffectiveTo], [Reference], [Remark], [OrganzationName], [OrganzationAddress], [JobDescription])
        SELECT   [ID],
                 [PersonID],
                 [EffectiveFrom],
                 [EffectiveTo],
                 [Reference],
                 [Remark],
                 [OrganzationName],
                 [OrganzationAddress],
                 [JobDescription]
        FROM     [dbo].[Experience]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Experience] OFF;
    END

DROP TABLE [dbo].[Experience];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Experience]', N'Experience';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[AcademicAchievement]...';


GO
CREATE TABLE [dbo].[AcademicAchievement] (
    [ID]                     INT            IDENTITY (1, 1) NOT NULL,
    [Code]                   NVARCHAR (30)  NULL,
    [Date]                   DATETIME2 (7)  NULL,
    [Description]            NVARCHAR (400) NULL,
    [Reference]              NVARCHAR (200) NULL,
    [Remark]                 NVARCHAR (400) NULL,
    [PersonID]               INT            NULL,
    [PerformanceIndicatorID] INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[AcademicEventParticipation]...';


GO
CREATE TABLE [dbo].[AcademicEventParticipation] (
    [ID]                      INT            IDENTITY (1, 1) NOT NULL,
    [Code]                    NVARCHAR (30)  NULL,
    [StartDate]               DATETIME2 (7)  NULL,
    [EndDate]                 DATETIME2 (7)  NULL,
    [Reference]               NVARCHAR (200) NULL,
    [Remark]                  NVARCHAR (400) NULL,
    [PersonID]                INT            NULL,
    [AcademicEventCategoryID] INT            NULL,
    [AcademicEventTitle]      NVARCHAR (400) NULL,
    [Description]             NVARCHAR (400) NULL,
    [Venue]                   NVARCHAR (400) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Punishment]...';


GO
CREATE TABLE [dbo].[Punishment] (
    [ID]                     INT            IDENTITY (1, 1) NOT NULL,
    [Code]                   NVARCHAR (30)  NULL,
    [Date]                   DATETIME2 (7)  NULL,
    [Description]            NVARCHAR (400) NULL,
    [Reference]              NVARCHAR (200) NULL,
    [Remark]                 NVARCHAR (400) NULL,
    [StudentID]              INT            NULL,
    [PerformanceIndicatorID] INT            NULL,
    [DeductedPoint]          REAL           NULL,
    [WrongDoingCategoryID]   INT            NULL,
    [PunishmentCategoryID]   INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Reward]...';


GO
CREATE TABLE [dbo].[Reward] (
    [ID]          INT            IDENTITY (1, 1) NOT NULL,
    [Code]        NVARCHAR (30)  NULL,
    [Date]        DATETIME2 (7)  NULL,
    [Description] NVARCHAR (400) NULL,
    [Reference]   NVARCHAR (200) NULL,
    [Remark]      NVARCHAR (400) NULL,
    [CategoryID]  INT            NULL,
    [StudentID]   INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[RoyalDecoration]...';


GO
CREATE TABLE [dbo].[RoyalDecoration] (
    [ID]                        INT            IDENTITY (1, 1) NOT NULL,
    [Date]                      DATETIME2 (7)  NULL,
    [Reference]                 NVARCHAR (200) NULL,
    [Remark]                    NVARCHAR (400) NULL,
    [RoyalDecorationCategoryID] INT            NULL,
    [PersonID]                  INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[StudentApplication]...';


GO
CREATE TABLE [dbo].[StudentApplication] (
    [ID]               INT            IDENTITY (1, 1) NOT NULL,
    [Date]             DATETIME2 (7)  NULL,
    [Reference]        NVARCHAR (200) NULL,
    [Remark]           NVARCHAR (400) NULL,
    [IDNo]             NVARCHAR (20)  NULL,
    [ApplicantID]      INT            NULL,
    [FatherID]         INT            NULL,
    [GuardianID]       INT            NULL,
    [MotherID]         INT            NULL,
    [StudentID]        INT            NULL,
    [LastSchoolID]     INT            NULL,
    [LastClassLevelID] INT            NULL,
    [GPA]              REAL           NULL,
    [ONETScore]        REAL           NULL,
    [TotalTestScore]   REAL           NULL,
    [Rank]             INT            NULL,
    [IsAdmitted]       BIT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[TestScore]...';


GO
CREATE TABLE [dbo].[TestScore] (
    [ID]                   INT            IDENTITY (1, 1) NOT NULL,
    [AdmissionTestID]      INT            NULL,
    [Remark]               NVARCHAR (400) NULL,
    [StudentApplicationID] INT            NULL,
    [Score]                REAL           NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
