@using TSIS.Models
@using TSIS.Classes
@model iSISModel.CourseSectionStudent
@{
    ViewBag.Title = ModelsRepository.GetLabel("Detail") + " " + ModelsRepository.GetLabel("CourseSectionPerformance");

    iSISModel.CourseSection courseSection = (iSISModel.CourseSection)ViewData["CourseSection"];
}

<h2>@ModelsRepository.GetLabel("Detail")&nbsp;@ModelsRepository.GetLabel("CourseSectionAppraisal")</h2>
<p>
    @ModelsRepository.GetLabel("AcademicYear") : @courseSection.Semester.AcademicYear
    <br />
    @ModelsRepository.GetLabel("SemesterNo") : @courseSection.Semester.SemesterNo
    <br />
    @ModelsRepository.GetLabel("CourseNo") :
    @{
        if (courseSection.Course.CourseNo != null)
        {
            @courseSection.Course.CourseNo.GetValue(CookieManager.GetCookie(HttpContext.Current, CookieManager.CookieName.CurrentLanguage))
        }
    }
    <br />
    @ModelsRepository.GetLabel("CourseTitle") :
    @{
        if (courseSection.Course.Title != null)
        {
            @courseSection.Course.Title.GetValue(CookieManager.GetCookie(HttpContext.Current, CookieManager.CookieName.CurrentLanguage))
        }
    }
    <br />
    @ModelsRepository.GetLabel("LevelTitle") :
    @{
        if (courseSection.Course.Level.Title != null)
        {
            @courseSection.Course.Level.Title.GetValue(CookieManager.GetCookie(HttpContext.Current, CookieManager.CookieName.CurrentLanguage))
        }
    }
    <br />
    @ModelsRepository.GetLabel("LevelShortTitle") :
    @{
        if (courseSection.Course.Level.ShortTitle != null)
        {
            @courseSection.Course.Level.ShortTitle.GetValue(CookieManager.GetCookie(HttpContext.Current, CookieManager.CookieName.CurrentLanguage))
        }
    }
    <br />
    @ModelsRepository.GetLabel("RoomNo") : @courseSection.Room.RoomNo
</p>
<p>
    @ModelsRepository.GetLabel("IDNo") : @Model.Student.IDNo
    <br />
    @ModelsRepository.GetLabel("CurrentName") :
    @{
        if (Model.Student.Person != null && Model.Student.Person.CurrentName != null)
        {
            @Model.Student.Person.CurrentName.ToString(CookieManager.GetCookie(HttpContext.Current, CookieManager.CookieName.CurrentLanguage))
        }
    }
    <br />
    @ModelsRepository.GetLabel("Email") : @Model.Student.Person.EmailAddress
</p>


<style>
    #row_data table tbody {
        vertical-align: top;
    }

        #row_data table tbody td {
            padding: 5px;
        }
</style>

@using (Html.BeginForm())
{
    <div id="row_data">
        <table>
            @{
    IList<iSISModel.CourseSectionPerformance> courseSectionPerformance = (IList<iSISModel.CourseSectionPerformance>)ViewData["CourseSectionPerformance"];
    IList<iSISModel.CourseSectionAppraisal> courseSectionAppraisal = (IList<iSISModel.CourseSectionAppraisal>)ViewData["CourseSectionAppraisal"];
    foreach (iSISModel.CourseSectionAppraisal item in courseSectionAppraisal)
    {
        iSISModel.CourseSectionPerformance performance = courseSectionPerformance.FirstOrDefault(x => x.CourseSectionAppraisal.ID == item.ID);
        <tr>
            <td>
                @{
        if (item.Title != null)
        {
            @item.Title.GetValue(CookieManager.GetCookie(HttpContext.Current, CookieManager.CookieName.CurrentLanguage))
        }
                }
            </td>
            <td>
                @Html.DevExpress().DateEdit(
                            s =>
                            {
                                s.Name = item.ID + "_AppraisalDate";
                                //s.Properties.DisplayFormatString = "dd/MM/yyyy";
                                s.Width = 100;
                                s.Date = item.AppraisalDate;
                                if (performance != null)
                                {
                                    if (performance.AppraisalDate != null)
                                    {
                                        s.Date = performance.AppraisalDate;
                                    }
                                }
                            }
                        ).GetHtml()
            </td>
            <td>
                @Html.DevExpress().SpinEdit(
                            s =>
                            {
                                s.Name = "score_" + item.ID;
                                s.Properties.MinValue = 0;
                                s.Properties.MaxValue = 100;
                                s.Width = 100;

                                if (performance != null)
                                {
                                    if (performance.Score != null)
                                    {
                                        s.Number = decimal.Parse(performance.Score.ToString());
                                    }
                                }
                            }
                        ).GetHtml()
            </td>
        </tr>
    }
    <tr>
        <td>
            @ModelsRepository.GetLabel("Grade")
        </td>
        <td colspan="2">
            @Html.DevExpress().ComboBox(
                        s =>
                        {
                            s.Name = "Grade";
                            s.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                            s.Properties.DropDownStyle = DropDownStyle.DropDown;
                            s.Properties.TextField = "Symbol";
                            s.Properties.ValueField = "ID";
                            s.Properties.ValueType = typeof(int);
                            s.Width = 100;
                            s.PreRender = (sender, e) =>
                            {
                                if (Model.Grade.ID != null)
                                {
                                    MVCxComboBox cmb = sender as MVCxComboBox;
                                    cmb.Value = int.Parse(Model.Grade.ID.ToString());
                                }
                            };
                        }
                    ).BindList(ViewData["DiscreteGrade"]).GetHtml()
        </td>
    </tr>
            }
        </table>
    </div>
    <p>
        @Html.DevExpress().Button(
            settings =>
            {
                settings.Name = "btnSave";
                settings.Text = ModelsRepository.GetLabel("Save");
                settings.UseSubmitBehavior = true;
            }
        ).GetHtml()
    </p>
}