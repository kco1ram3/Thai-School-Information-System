@using iSISDemo.Models
@using iSISDemo.Classes
@model iSISModel.User
@{
    ViewBag.Title = ModelsRepository.GetLabel("UsernameAndPassword");

    iSISModel.Person person = (iSISModel.Person)ViewData["Person"];
}

<h2>@ModelsRepository.GetLabel("UsernameAndPassword")&nbsp;(@person.CurrentName.ToString(CookieManager.GetCookie(HttpContext.Current, CookieManager.CookieName.CurrentLanguage)))</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        
    @Html.Hidden("UrlReferrer", ViewData["UrlReferrer"]);
    
    @Html.DevExpress().Label(settings =>
    {
        settings.Name = "UsernameLabel";
        settings.Text = ModelsRepository.GetLabel("Username");
        settings.AssociatedControlName = "Username";
    }).GetHtml()

    <div class="form-field">
        @Html.DevExpress().TextBox(
            settings =>
            {
                settings.Name = "Username";
                if (Model != null)
                {
                    settings.ReadOnly = true;
                    settings.Text = Model.LoginName;
                }
            }
         ).GetHtml()
    </div>

    @Html.DevExpress().Label(settings =>
    {
        settings.Name = "PasswordLabel";
        settings.Text = ModelsRepository.GetLabel("Password");
        settings.AssociatedControlName = "Password";
    }).GetHtml()

    <div class="form-field">
        @Html.DevExpress().TextBox( 
            settings =>
            {
                settings.Name = "Password";
                settings.Properties.Password = true;
            }
        ).GetHtml()
    </div>
    
    @Html.DevExpress().Label(settings =>
    {
        settings.Name = "RoleLabel";
        settings.Text = ModelsRepository.GetLabel("Role");
        settings.AssociatedControlName = "ComboBoxRole";
    }).GetHtml()

    <div class="form-field">
        @Html.DevExpress().ComboBox(
            settings =>
            {
                settings.Name = "ComboBoxRole";
                settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.StartsWith;
                settings.Properties.DropDownStyle = DropDownStyle.DropDown;
                settings.Properties.TextField = "Text";
                settings.Properties.ValueField = "Value";
                settings.Properties.ValueType = typeof(Int64);
                settings.PreRender = (sender, e) =>
                {
                    if (ViewData["RoleID"] != null)
                    {
                        MVCxComboBox cmb = sender as MVCxComboBox;
                        cmb.Value = ViewData["RoleID"];
                    }
                };
            }
        ).BindList(ModelsRepository.GetComboBoxItems((IList<iSISModel.Role>)ViewData["Role"])).GetHtml()
    </div>

    @Html.DevExpress().Button(
        settings =>
        {
            settings.Name = "btnSave";
            settings.Text = ModelsRepository.GetLabel("Save");
            settings.UseSubmitBehavior = true;
        }
    ).GetHtml()
}